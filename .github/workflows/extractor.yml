name: Extract OnePlus OPS Firmware and Release op1.img

on:
  workflow_dispatch:
    inputs:
      ops_firmware_url:
        description: 'URL of the firmware ZIP file (containing the .ops file)'
        required: true
        type: string
      output_directory:
        description: 'Directory to store extracted files (e.g., extracted_firmware)'
        required: false
        default: 'extracted_firmware'
        type: string

jobs:
  extract_firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Clone oppo_decrypt tool
        run: |
          git clone https://github.com/bkerler/oppo_decrypt.git
          cd oppo_decrypt
          pip3 install -r requirements.txt

      - name: Download Firmware ZIP
        run: |
          curl -L -o firmware.zip "${{ github.event.inputs.ops_firmware_url }}"

      - name: Unzip Firmware Archive
        run: |
          mkdir -p temp_firmware_unzip
          unzip -o firmware.zip -d temp_firmware_unzip/
          echo "Contents of temp_firmware_unzip:"
          ls -R temp_firmware_unzip/

      - name: Find and Extract OPS firmware
        id: extract_ops_step
        run: |
          OPS_FILE=$(find temp_firmware_unzip/ -name "*.ops" -print -quit)

          if [ -z "$OPS_FILE" ]; then
            echo "ERROR: No .ops file found in the unzipped archive!"
            exit 1
          fi

          echo "Found OPS file: $OPS_FILE"

          python3 oppo_decrypt/opscrypto.py decrypt "$OPS_FILE" --extractdir="${{ github.workspace }}/${{ github.event.inputs.output_directory }}"
          echo "extracted_output_path=${{ github.workspace }}/${{ github.event.inputs.output_directory }}" >> $GITHUB_OUTPUT

      - name: Set output path for op1.img
        id: op1_img_path
        run: |
          OP1_IMG=$(find "${{ steps.extract_ops_step.outputs.extracted_output_path }}" -name "op1.img" -print -quit)
          if [ -z "$OP1_IMG" ]; then
            echo "ERROR: op1.img not found after extraction."
            exit 1
          fi
          echo "op1_img=$OP1_IMG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload op1.img
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.op1_img_path.outputs.op1_img }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up temporary files (Optional)
        run: |
          rm firmware.zip
          rm -rf temp_firmware_unzip/
          rm -rf oppo_decrypt/
