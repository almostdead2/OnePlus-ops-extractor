name: Auto Release op1.img

on:
  workflow_dispatch:
    inputs:
      ops_firmware_url:
        description: 'URL to the firmware ZIP (containing the .ops file)'
        required: true
        type: string

jobs:
  release-op1-img:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Clone oppo_decrypt tool
        run: |
          git clone https://github.com/bkerler/oppo_decrypt.git
          cd oppo_decrypt
          pip3 install -r requirements.txt

      - name: Download Firmware ZIP
        run: |
          curl -L -o firmware.zip "${{ github.event.inputs.ops_firmware_url }}"

      - name: Unzip Firmware Archive
        run: |
          mkdir -p temp_firmware_unzip
          unzip -o firmware.zip -d temp_firmware_unzip/

      - name: Find and Extract OPS file
        run: |
          OPS_FILE=$(find temp_firmware_unzip/ -name "*.ops" -print -quit)
          if [ -z "$OPS_FILE" ]; then
            echo "No .ops file found!"
            exit 1
          fi
          mkdir extracted
          python3 oppo_decrypt/opscrypto.py decrypt "$OPS_FILE" --extractdir=extracted

      - name: Find op1.img
        id: find_img
        run: |
          OP1_IMG=$(find extracted -name "op1.img" -print -quit)
          if [ -z "$OP1_IMG" ]; then
            echo "op1.img not found!"
            exit 1
          fi
          echo "op1_img=$OP1_IMG" >> $GITHUB_OUTPUT

      - name: Generate automatic tag
        id: tag
        run: |
          TAG="auto-op1img-$(date -u +'%Y%m%d-%H%M%S')"
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload op1.img
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: "Auto Release of op1.img"
          files: ${{ steps.find_img.outputs.op1_img }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
